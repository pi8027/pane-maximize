#!/bin/sh
# By Kazuhiko Sakaguchi. Public domain.

usage_exit(){
cat <<EOT >&2
Usage: `basename $0` [-adP] [-F format] [-t target-pane]
-a:             Insert the maximized window at the next index up from the
                original position.
-d:             Don't change the current window.
-P:             Print information about the new window.
-F format:      This format is used by the -P option.  By default, the format is
                \`#{session_name}:#{window_index}'.
-t target-pane: Specify the target pane.
EOT
exit 1
}

if [ -n "$DUMMY_PANE_MODE" ] ; then
    stty intr undef
    printf '\033]2;DUMMY PANE\033\\'
    echo '********************'
    echo '**** dummy pane ****'
    echo '********************'
    while true ; do read v ; done
fi

optarg_F='#{session_name}:#{window_index}'
while getopts adPF:t: OPT ; do
    case $OPT in
    a|d|P) eval optflag_$OPT=true ;;
    F|t  ) eval optarg_$OPT=\$OPTARG ;;
    *    ) usage_exit ;;
    esac
done

paneid=`tmux display-message -p ${optarg_t:+-t $optarg_t} '#{pane_id}'`
[ -z "$paneid" ] && exit 1

pmtable=`tmux showenv pmtable 2> /dev/null | sed '1 s/^pmtable=//'`
target=`echo $pmtable | tr , '\n' | grep -E "( |^)$paneid( |$)" | head -n 1`

if [ -n "$target" ] ; then
    set -- ${target}
    tmux swap-pane -t $2 -s $1 \; \
         kill-pane -t $2 \; \
         setenv pmtable "`echo $pmtable | sed "s/,$target//"`"
elif [ `tmux list-panes -t $paneid | wc -l` != 1 ] ; then
    result=`tmux new-window ${optflag_a:+-a -t $paneid} ${optflag_d:+-d} \
        -P -F "#{pane_id}:$optarg_F" "DUMMY_PANE_MODE=true \"$0\""`
    [ -n "$optflag_P" ] && echo $result | tail -n +2
    npaneid=`echo $result | tr : '\n' | head -n 1`
    tmux swap-pane -s $paneid -t $npaneid \; \
         setenv pmtable "$pmtable,$paneid $npaneid"
else
    tmux display-message 'This pane is already maximized.'
    exit 1
fi
